-- 1. Map the raw JSON structure
CREATE OR REPLACE STREAM COMMITS_DATA_1STR (
  author VARCHAR,
  dateTimeUtc VARCHAR,
  language VARCHAR,
  sha VARCHAR,
  message VARCHAR,
  repositoryFullName VARCHAR
) WITH (
  kafka_topic = 'github-commits',
  value_format = 'json',
  partitions = 3
);

-- 2. Total number of commits per day
CREATE OR REPLACE STREAM COMMITS_DATA_BY_DAY AS
SELECT SUBSTRING(dateTimeUtc, 1, 10) AS commit_day,
       sha
FROM COMMITS_DATA_1STR
EMIT CHANGES;

CREATE TABLE TOTAL_COMMITS_BY_DAY AS
SELECT commit_day, COUNT(*) AS total_commits
FROM COMMITS_DATA_BY_DAY
GROUP BY commit_day
EMIT CHANGES;

-- 3. Total unique committers
CREATE OR REPLACE STREAM COMMITTERS_STREAM AS
SELECT author, sha
FROM COMMITS_DATA_1STR
EMIT CHANGES;

CREATE TABLE TOTAL_COMMITTERS AS
SELECT 'all' AS dummy_key, COUNT_DISTINCT(author) AS unique_committers
FROM COMMITTERS_STREAM
GROUP BY 'all'
EMIT CHANGES;

-- 4. Commits per programming language
CREATE TABLE COMMITS_PER_LANGUAGE AS
SELECT language, COUNT(*) AS total
FROM COMMITS_DATA_1STR
GROUP BY language
EMIT CHANGES;

CREATE TABLE COMMITS_PER_LANGUAGE_COMPACTED WITH (
  KAFKA_TOPIC = 'github-metrics-languages-compacted',
  VALUE_FORMAT = 'json'
) AS
SELECT language, COUNT(*) AS total
FROM COMMITS_DATA_1STR
GROUP BY language
EMIT CHANGES;

-- 5. Top 5 committers by count
CREATE TABLE COMMITS_PER_AUTHOR AS
SELECT author, COUNT(*) AS commit_count
FROM COMMITS_DATA_1STR
GROUP BY author
EMIT CHANGES;

CREATE TABLE TOP_5_COMMITTERS AS
SELECT author, commit_count
FROM COMMITS_PER_AUTHOR
EMIT CHANGES
LIMIT 5;


-- Commits Per Repository
CREATE TABLE COMMITS_PER_REPO AS
SELECT repositoryFullName, COUNT(*) AS total_commits
FROM COMMITS_DATA_1STR
GROUP BY repositoryFullName
EMIT CHANGES;


-- Hourly Commit Distribution

CREATE TABLE COMMITS_BY_HOUR AS
SELECT SUBSTRING(dateTimeUtc, 12, 2) AS commit_hour,
       COUNT(*) AS total
FROM COMMITS_DATA_1STR
GROUP BY SUBSTRING(dateTimeUtc, 12, 2)
EMIT CHANGES;


-- Bugifix commits
CREATE TABLE BUGFIX_COMMITS AS
SELECT 'all' AS dummy_key,
       COUNT(*) AS bugfix_commits
FROM COMMITS_DATA_1STR
WHERE LCASE(message) LIKE '%fix%' OR LCASE(message) LIKE '%bug%'
GROUP BY 'all'
EMIT CHANGES;
