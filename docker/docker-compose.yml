services:
  zookeeper:
    image: "confluentinc/cp-zookeeper:${CONF_VER}"
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      TZ: ${TZ_SET}
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote=false"
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka1:
    image: "confluentinc/cp-enterprise-kafka:${CONF_VER}"
    container_name: kafka1
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    environment:
      TZ: ${TZ_SET}
      KAFKA_BROKER_ID: 1
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote=false"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      CONFLUENT_METRICS_ENABLE: 'false'

  kafka2:
    image: "confluentinc/cp-enterprise-kafka:${CONF_VER}"
    container_name: kafka2
    depends_on:
      - zookeeper
    ports:
      - '9095:9095'
    environment:
      TZ: ${TZ_SET}
      KAFKA_BROKER_ID: 2
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote=false"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:29095,PLAINTEXT_HOST://localhost:9095
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29095,PLAINTEXT_HOST://0.0.0.0:9095
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      CONFLUENT_METRICS_ENABLE: 'false'

  kafka3:
    image: "confluentinc/cp-enterprise-kafka:${CONF_VER}"
    container_name: kafka3
    depends_on:
      - zookeeper
    ports:
      - '9098:9098'
    environment:
      TZ: ${TZ_SET}
      KAFKA_BROKER_ID: 3
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote=false"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:29098,PLAINTEXT_HOST://localhost:9098
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29098,PLAINTEXT_HOST://0.0.0.0:9098
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      CONFLUENT_METRICS_ENABLE: 'false'


  ksqldb-server:
    image: confluentinc/cp-ksqldb-server:${KSQLDB_VER}
    container_name: ksqldb-server
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    ports:
      - "8088:8088"
    environment:
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote=false"
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_BOOTSTRAP_SERVERS: kafka1:29092,kafka2:29095,kafka3:29098
      KSQL_KSQL_CONNECT_URL: http://kafka-connect:8083
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
      KSQL_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
      KSQL_KSQL_EXTENSION_DIR: "/etc/ksql/ext"
    volumes:
      - ./scripts:/scripts
      - ./ext:/etc/ksql/ext

  ksqldb-cli:
    image: confluentinc/cp-ksqldb-cli:${KSQLDB_VER}
    container_name: ksqldb-cli
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - ksqldb-server
    volumes:
      - ./user_profile_pretty.ksql:/user_profile_pretty.ksql
    entrypoint: /bin/sh
    tty: true

  kafka-connect:
    container_name: kafka-connect
    image: confluentinc/cp-kafka-connect:${CONNECT_VER}
    depends_on:
      - zookeeper
      - kafka1
      - kafka2
      - kafka3
    ports:
      - '8083:8083'
    environment:
      TZ: ${TZ_SET}
      CONNECT_BOOTSTRAP_SERVERS: kafka1:29092,kafka2:29095,kafka3:29098
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_PLUGIN_PATH: /usr/share/java
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_CONFLUENT_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./container-data/kafka-connect/kafka-connect-rest:/usr/share/java/kafka-connect-rest
      - ./container-data/kafka-connect/input:/tmp

  akhq:
    image: tchiotludo/akhq
    container_name: akhq
    ports:
      - 8089:8080
    environment:
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote=false"
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            my-cluster:
              properties:
                bootstrap.servers: "kafka1:29092,kafka2:29095,kafka3:29098"
